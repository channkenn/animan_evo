/* General Body Styles */
body {
  font-family: Arial, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0;
  padding: 20px;
  background-color: #f4f4f4;
}

h1 {
  color: #333;
  margin-bottom: 20px;
}

/* Main Container for Layout */
.container {
  display: flex;
  width: 100%;
  /* Canvas (900px) + Controls (280px) + Object List (250px) + 2 * gap (2*20px) = 1470px */
  max-width: 1340px; /* ここを1340pxに修正 */
  background-color: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  justify-content: center; /* コンテンツを中央揃えにする */
  align-items: flex-start; /* 各カラムの開始位置を上揃えにする */
}

/* Left Column: Controls */
.controls {
  flex: 0 0 180px; /* 固定幅 */
  padding-right: 20px;
  border-right: 1px solid #eee;
}

.controls h2 {
  color: #555;
  border-bottom: 1px solid #eee;
  padding-bottom: 10px;
  margin-top: 20px;
  margin-bottom: 15px;
}

.controls h2:first-of-type {
  margin-top: 0; /* 最初のh2の上マージンをなくす */
}

.controls label {
  display: block;
  margin-bottom: 10px;
  font-weight: bold;
  color: #666;
}

.controls input[type="text"],
.controls input[type="number"],
.controls input[type="file"] {
  width: calc(100% - 10px); /* Padding分を考慮 */
  padding: 8px;
  margin-top: 5px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.controls button {
  background-color: #104cd0;
  color: white;
  padding: 10px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1em;
  margin-top: 10px;
  transition: background-color 0.2s;
}

.controls button:hover {
  background-color: #104cd0;
}

#selectedObjectControls label {
  margin-bottom: 5px; /* 選択中コントロールのラベル間隔を狭める */
}

#selectedObjectControls input[type="number"],
#selectedObjectControls input[type="text"] {
  width: 100px; /* 個別調整 */
  margin-left: 5px;
}

#selectedObjectControls button {
  margin-right: 5px;
  background-color: #007bff;
}

#selectedObjectControls button:hover {
  background-color: #0056b3;
}

#noObjectSelectedText {
  color: #888;
  font-style: italic;
  margin-top: 15px;
}

hr {
  border: 0;
  border-top: 1px solid #eee;
  margin: 20px 0;
}

/* Center Column: Canvas */
.canvas-container {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  margin: 0 20px; /* 左右にギャップを設定 */
  /* Canvasのサイズを固定するため、このコンテナはCanvasのサイズに合わせる */
  width: 900px; /* Canvasの幅に合わせる */
  height: 600px; /* Canvasの高さに合わせる */
  flex-shrink: 0; /* コンテナが縮まないように */
}

canvas {
  border: 1px solid #ccc; /* Canvas自体のボーダー */
  display: block; /* 不要な余白を削除 */
  /* ここから下のwidth, height, min/max-width/heightを削除します */
  /* width: 900px; */
  /* height: 600px; */
  /* min-width: 900px; */
  /* min-height: 600px; */
  /* max-width: 900px; */
  /* max-height: 600px; */
}

/* Right Column: Object List */
#object-list {
  flex: 0 0 200px; /* 固定幅 */
  padding-left: 20px;
  border-left: 1px solid #eee;
}

#object-list h3 {
  color: #555;
  border-bottom: 1px solid #eee;
  padding-bottom: 10px;
  margin-top: 0;
  margin-bottom: 15px;
}

#object-ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

#object-ul li {
  display: flex; /* Flexboxを有効に */
  align-items: center; /* 垂直方向中央揃え */
  justify-content: space-between; /* テキストとボタンを左右に配置 */
  padding: 8px 10px;
  border: 1px solid #eee;
  margin-bottom: 5px;
  background-color: #f9f9f9;
  cursor: grab; /* ドラッグ可能であることを示す */
  border-radius: 4px;
  font-size: 0.9em;
  position: relative;
  user-select: none;
  /* レイアウト崩れ防止のための追加 */
  overflow: hidden; /* はみ出たコンテンツを隠す */
  box-sizing: border-box; /* paddingとborderをwidth/heightに含める */
}

#object-ul li.selected {
  background-color: #e0f2f7;
  border-color: #007bff;
  font-weight: bold;
}

#object-ul li.dragging {
  opacity: 0.7;
  border: 2px dashed #007bff;
  background-color: #e6f7ff;
}

/* テキスト部分のスタイルを修正・追加 */
#object-ul li span {
  /* flex-grow: 1; */ /* 最大限に占有する設定を解除 */
  flex-shrink: 1; /* 必要に応じて縮小する */
  flex-basis: auto; /* 基本サイズをコンテンツに合わせる */
  /* min-width: 0; */ /* flex-basis: auto; と併用するとデフォルトで適用されるため不要 */
  white-space: nowrap; /* テキストを折り返さない */
  overflow: hidden; /* はみ出た部分を隠す */
  text-overflow: ellipsis; /* はみ出た部分を三点リーダーで表示 */
  padding-right: 5px; /* テキストとボタンの間に少し隙間を作る */

  /* ***** ここを修正/追加 ***** */
  /* 全角2文字分の幅の目安（font-size: 0.9em; を考慮） */
  /* 例: 0.9em = 0.9 * 16px = 14.4px/文字 */
  /* 全角2文字なので、14.4px * 2 = 28.8px くらいが目安 */
  /* ただし、三点リーダー分も必要なので、もう少し大きくする */
  max-width: 80px; /* 全角2文字＋αの幅を設定。環境によって微調整が必要な場合があります。 */
  /* ************************* */
}

/* ボタンコンテナのスタイル */
#object-ul li .item-buttons {
  display: flex;
  gap: 5px; /* ボタン間のスペース */
  flex-shrink: 0; /* コンテンツが縮まないように */
}

#object-ul li .move-btn,
#object-ul li .delete-item-btn {
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 3px;
  padding: 4px 8px;
  cursor: pointer;
  font-size: 0.8em;
  transition: background-color 0.2s;
}

#object-ul li .delete-item-btn {
  background-color: #dc3545;
}

#object-ul li .move-btn:hover {
  background-color: #0056b3;
}

#object-ul li .delete-item-btn:hover {
  background-color: #c82333;
}

/* 矢印ボタンの見た目 */
#object-ul li .move-up-btn::before {
  content: "↑"; /* 上矢印 */
}

#object-ul li .move-down-btn::before {
  content: "↓"; /* 下矢印 */
}

/* スライダーのスタイル */
.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 8px;
  background: #d3d3d3;
  outline: none;
  opacity: 0.7;
  -webkit-transition: 0.2s;
  transition: opacity 0.2s;
  border-radius: 4px;
  margin-top: 5px;
  margin-bottom: 15px;
}

.slider:hover {
  opacity: 1;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 20px;
  height: 20px;
  background: #007bff;
  cursor: pointer;
  border-radius: 50%;
}

.slider::-moz-range-thumb {
  width: 20px;
  height: 20px;
  background: #007bff;
  cursor: pointer;
  border-radius: 50%;
}

/* ---ここから追加--- */

/* レスポンシブデザインのブレークポイント (例: 768px 以下の場合に適用) */
@media (max-width: 768px) {
  /* Bodyのパディングを調整 (スマホで左右の余白を減らす) */
  body {
    padding: 10px;
  }

  /* トップコントロール（テキスト/画像追加部分）の調整 */
  .top-controls {
    flex-direction: column; /* 縦並びにする */
    gap: 20px; /* 縦方向のギャップを調整 */
    padding: 15px;
    max-width: 100%; /* 全幅を使う */
    box-sizing: border-box; /* パディングとボーダーを幅に含める */
  }

  .top-control-section {
    min-width: unset; /* 最小幅の制約を解除 */
    width: 100%; /* 親の幅いっぱいに広げる */
  }

  /* メインコンテナ（左右カラムとCanvas）の調整 */
  .container {
    flex-direction: column; /* 縦並びにする */
    gap: 20px; /* 縦方向のギャップを設定 */
    padding: 15px;
    max-width: 100%; /* 全幅を使う */
    overflow-x: hidden; /* 横スクロールバーを非表示にする（縦並びになったため不要） */
    box-sizing: border-box; /* パディングとボーダーを幅に含める */
  }

  /* 左カラム: Controls */
  .controls {
    border-right: none; /* 縦並びになったので右側のボーダーを削除 */
    border-bottom: 1px solid #eee; /* 下にボーダーを追加 */
    padding-right: 0;
    padding-bottom: 20px;
    flex: 0 0 auto; /* 固定幅を解除し、コンテンツに合わせて調整 */
    width: 100%; /* 親の幅いっぱいに広げる */
    min-width: unset; /* 最小幅の制約を解除 */
    box-sizing: border-box; /* パディングとボーダーを幅に含める */
  }

  /* 中央カラム: Canvas Container */
  .canvas-container {
    width: 100%;
    /* height: auto;  高さの自動調整を解除 */
    min-height: 250px; /* ★ここを修正/追加: スマホでの最小高さを設定 (例: 250px) */
    max-height: 80vw; /* ★ここを修正/追加: 画面幅に対する最大高さを設定 (例: 画面幅の80%) */
    margin: 0;
    max-width: 100%;
    /* max-height: 50vw;  これは以前の提案、より柔軟な設定に変更 */
    min-width: unset;
    box-sizing: border-box;
    /* Canvasの縦横比を維持しながら、ある程度の高さを確保したい場合は
       padding-bottomを使ったAspectRatio Boxの手法も有効ですが、
       今回はmin-heightとmax-heightで対応します。 */
  }

  /* Canvas要素自体も親コンテナに合わせてサイズ調整 */
  canvas {
    width: 100% !important;
    height: 100% !important; /* ★ここを修正: 親コンテナの高さに合わせる */
    display: block;
    object-fit: contain; /* ★ここを修正/追加: コンテナ内でCanvas内容を収める */
  }

  /* 右カラム: Object List */
  #object-list {
    border-left: none; /* 縦並びになったので左側のボーダーを削除 */
    padding-left: 0;
    padding-top: 20px;
    flex: 0 0 auto; /* 固定幅を解除し、コンテンツに合わせて調整 */
    width: 100%; /* 親の幅いっぱいに広げる */
    min-width: unset; /* 最小幅の制約を解除 */
    box-sizing: border-box; /* パディングとボーダーを幅に含める */
  }

  /* オブジェクトリストアイテムのテキスト幅調整 (より柔軟に) */
  #object-ul li span {
    max-width: 60%; /* 親の幅に対して60%まで広がるように調整。必要に応じて変更 */
  }
}

/* ---ここまで追加--- */
